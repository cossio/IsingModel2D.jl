var documenterSearchIndex = {"docs":
[{"location":"literate/hybrid/","page":"Hybrid sampler","title":"Hybrid sampler","text":"EditURL = \"hybrid.jl\"","category":"page"},{"location":"literate/hybrid/#Examples-using-hybrid-(Metropolis-Wolff)-sampling-method","page":"Hybrid sampler","title":"Examples using hybrid (Metropolis + Wolff) sampling method","text":"","category":"section"},{"location":"literate/hybrid/#Magnetization-as-a-function-of-temperature","page":"Hybrid sampler","title":"Magnetization as a function of temperature","text":"","category":"section"},{"location":"literate/hybrid/","page":"Hybrid sampler","title":"Hybrid sampler","text":"import IsingModels as Ising\nusing Statistics, CairoMakie, Random\n\nRandom.seed!(1) # make reproducible\n\nβs = 0:0.025:1\nfig = Figure(resolution=(600,400))\nax = Axis(fig[1,1], xlabel=\"β\", ylabel=\"m\")\nlines!(ax, 0:0.01:1, Ising.onsager_magnetization, color=:black, label=\"analytical\")\n\nmavg = zeros(length(βs))\nmstd = zeros(length(βs))\nσ = bitrand(32, 32)\nfor (k,β) in enumerate(βs)\n    σ_t, M, E = Ising.hybrid!(σ, β, steps=10^7)\n    m = abs.(M[(length(M) ÷ 2):end]) / length(σ)\n    mavg[k] = mean(m)\n    mstd[k] = std(m)\nend\nscatter!(ax, βs, mavg, color=:blue, markersize=5, label=\"MC, L=30\")\nerrorbars!(ax, βs, mavg, mstd/2, color=:blue, whiskerwidth=5)\n\nmavg = zeros(length(βs))\nmstd = zeros(length(βs))\nσ = bitrand(64, 64)\nfor (k, β) in enumerate(βs)\n    σ_t, M, E = Ising.hybrid!(σ, β, steps=10^7)\n    m = abs.(M[(length(M) ÷ 2):end]) / length(σ)\n    mavg[k] = mean(m)\n    mstd[k] = std(m)\nend\nscatter!(ax, βs, mavg, color=:red, markersize=5, label=\"MC, L=70\")\nerrorbars!(ax, βs, mavg, mstd/2, color=:red, whiskerwidth=5)\n\naxislegend(ax, position=:rb)\nfig","category":"page"},{"location":"literate/hybrid/#Wolff-steps-are-mixed-with-Metropolis-steps","page":"Hybrid sampler","title":"Wolff steps are mixed with Metropolis steps","text":"","category":"section"},{"location":"literate/hybrid/","page":"Hybrid sampler","title":"Hybrid sampler","text":"import IsingModels as Ising\nusing CairoMakie, Random\n\nRandom.seed!(5) # make reproducible\nβ = Ising.βc\nΔ = 5\nσ = bitrand(32, 32)\nIsing.metropolis!(σ, β; steps=10^6) # equilibrate a bit to get some clusters\nσ_t, M, E = Ising.hybrid!(σ, β; steps=20, save_interval = 1, local_steps = Δ)\nfig = Figure(resolution=(600, 500))\nfor t ∈ 1:size(σ_t, 3)\n    ax = Axis(fig[cld(t, Δ), mod1(t, Δ)])\n    hidedecorations!(ax)\n    heatmap!(ax, σ_t[:,:,t], colormap=cgrad([:purple, :orange], [0.5]; categorical=true))\nend\nfig","category":"page"},{"location":"literate/hybrid/","page":"Hybrid sampler","title":"Hybrid sampler","text":"In the figure above, each row is a sequence of consecutive Metropolis steps. Inside a row the configurations are very similar differing in single sites. When the row ends, a Wolff cluster move is taken. It can be seen that the next row has suffered a larger change, since a cluster was flipped.","category":"page"},{"location":"literate/hybrid/#Magnetic-susceptibility","page":"Hybrid sampler","title":"Magnetic susceptibility","text":"","category":"section"},{"location":"literate/hybrid/","page":"Hybrid sampler","title":"Hybrid sampler","text":"using Statistics, CairoMakie, Random\nimport IsingModels as Ising\n\nRandom.seed!(1) # make reproducible\nTs = 2:0.01:3\nβs = inv.(Ts)\n\nfig = Figure(resolution=(600, 400))\nax = Axis(fig[1,1], xlabel=L\"temperature $T$ ($=1/\\beta$)\", ylabel=\"susceptibility\", yscale=log10)\n@time for (L, color) in zip([4, 8, 16, 32], [:green, :orange, :blue, :red])\n    χ = zeros(length(βs))\n    for (k, β) in enumerate(βs)\n        σ = bitrand(L, L)\n        σ_t, M, E = Ising.hybrid!(σ, β; steps=10^6)\n        χ[k] = β/length(σ) * var(abs.(M))\n    end\n    scatter!(ax, Ts, χ, color=color, markersize=5, label=L\"L=%$L\")\nend\nvlines!(ax, [1 / Ising.βc], label=L\"Onsager's $T_c$\", color=:black, linestyle=:dash)\naxislegend(ax, position=:rt)\n\nfig","category":"page"},{"location":"literate/hybrid/#Heat-capacity","page":"Hybrid sampler","title":"Heat capacity","text":"","category":"section"},{"location":"literate/hybrid/","page":"Hybrid sampler","title":"Hybrid sampler","text":"using Statistics, CairoMakie, Random\nimport IsingModels as Ising\n\nRandom.seed!(1) # make reproducible\nTs = 1.5:0.01:3\nβs = inv.(Ts)\n\nfig = Figure(resolution=(600, 400))\nax = Axis(fig[1,1], xlabel=L\"temperature $T$ ($=1/\\beta$)\", ylabel=\"heat capacity\", yscale=log10)\n@time for (L, color) in zip([4, 8, 16, 32], [:green, :orange, :blue, :red])\n    C = zeros(length(βs))\n    for (k, β) in enumerate(βs)\n        σ = bitrand(L, L)\n        σ_t, M, E = Ising.hybrid!(σ, β; steps=10^7)\n        C[k] = β^2/length(σ) * var(E)\n    end\n    scatter!(ax, Ts, C, color=color, markersize=5, label=L\"L=%$L\")\nend\nvlines!(ax, [1 / Ising.βc], label=L\"Onsager's $T_c$\", color=:black, linestyle=:dash)\naxislegend(ax, position=:lt)\n\nfig","category":"page"},{"location":"literate/hybrid/#Wolff-vs.-Metropolis-spin-flip-rates","page":"Hybrid sampler","title":"Wolff vs. Metropolis spin flip rates","text":"","category":"section"},{"location":"literate/hybrid/","page":"Hybrid sampler","title":"Hybrid sampler","text":"At low temperatures, Wolff flips more spins per unit time than Metropolis. At high temperatures, Metropolis is more efficient. The crossing point approaches the critical temperature for larger system sizes.","category":"page"},{"location":"literate/hybrid/","page":"Hybrid sampler","title":"Hybrid sampler","text":"using Statistics, CairoMakie, Random\nimport IsingModels as Ising\n\nRandom.seed!(1) # make reproducible\nTs = 1:0.5:5\nβs = inv.(Ts)\n\nfig = Figure(resolution=(600, 400))\nax = Axis(fig[1,1], xlabel=L\"temperature $T$ ($=1/\\beta$)\", ylabel=\"spin flips / second\", yscale=log10)\n@time for (L, color) in zip([4, 8, 16, 32], [:blue, :red, :orange, :green])\n    wolff_rates = zeros(length(βs))\n    local_rates = zeros(length(βs))\n    for (k, β) in enumerate(βs)\n        σ = bitrand(L, L)\n        stats = Ising.HybridStats()\n        σ_t, M, E = Ising.dynamic_hybrid!(σ, β; steps=10^6, hybrid_stats=stats)\n        local_rates[k] = stats.local_flip / stats.local_time\n        wolff_rates[k] = stats.wolff_flip / stats.wolff_time\n    end\n    scatterlines!(ax, Ts, local_rates, markersize=15, label=L\"$L=%$L$ local\", color=color, marker='x', markercolor=color, linestyle=:dash)\n    scatterlines!(ax, Ts, wolff_rates, markersize=15, label=L\"$L=%$L$ wolff\", color=color, marker='o', markercolor=color, linestyle=:dot)\nend\nvlines!(ax, [1 / Ising.βc], label=L\"Onsager's $T_c$\", color=:black, linewidth=1)\n\nLegend(fig[1,2], ax)\n\nfig","category":"page"},{"location":"literate/hybrid/","page":"Hybrid sampler","title":"Hybrid sampler","text":"","category":"page"},{"location":"literate/hybrid/","page":"Hybrid sampler","title":"Hybrid sampler","text":"This page was generated using Literate.jl.","category":"page"},{"location":"literate/metropolis/","page":"Metropolis","title":"Metropolis","text":"EditURL = \"metropolis.jl\"","category":"page"},{"location":"literate/metropolis/","page":"Metropolis","title":"Metropolis","text":"Examples using the Metropolis sampling method","category":"page"},{"location":"literate/metropolis/","page":"Metropolis","title":"Metropolis","text":"# Magnetization as a function of temperature\n\nimport IsingModels as Ising\nusing Statistics, CairoMakie, Random\n\nRandom.seed!(1) # make reproducible\nnothing #hide","category":"page"},{"location":"literate/metropolis/","page":"Metropolis","title":"Metropolis","text":"Define the temperatures we will consider.","category":"page"},{"location":"literate/metropolis/","page":"Metropolis","title":"Metropolis","text":"βs = 0:0.025:1\nnothing #hide","category":"page"},{"location":"literate/metropolis/","page":"Metropolis","title":"Metropolis","text":"Simulate a range of temperatures. Compare to analytical magnetization.","category":"page"},{"location":"literate/metropolis/","page":"Metropolis","title":"Metropolis","text":"fig = Figure(resolution=(600,400))\nax = Axis(fig[1,1], xlabel=\"β\", ylabel=\"m\")\nlines!(ax, 0:0.01:1, Ising.onsager_magnetization, color=:black, label=\"analytical\")\n\nmavg = zeros(length(βs))\nmstd = zeros(length(βs))\nσ = bitrand(20, 20)\nfor (k, β) in enumerate(βs)\n    σ_t, M, E = Ising.metropolis!(σ, β; steps=10^7)\n    m = abs.(M[(length(M) ÷ 2):end]) / length(σ)\n    mavg[k] = mean(m)\n    mstd[k] = std(m)\nend\nscatter!(ax, βs, mavg, color=:blue, markersize=5, label=\"MC, L=20\")\nerrorbars!(ax, βs, mavg, mstd/2, color=:blue, whiskerwidth=5)\n\nmavg = zeros(length(βs))\nmstd = zeros(length(βs))\nσ = bitrand(64, 64)\nfor (k, β) in enumerate(βs)\n    σ_t, M, E = Ising.metropolis!(σ, β; steps=10^7)\n    m = abs.(M[(length(M) ÷ 2):end]) / length(σ)\n    mavg[k] = mean(m)\n    mstd[k] = std(m)\nend\nscatter!(ax, βs, mavg, color=:red, markersize=5, label=\"MC, L=50\")\nerrorbars!(ax, βs, mavg, mstd/2, color=:red, whiskerwidth=5)\n\naxislegend(ax, position=:rb)\nfig","category":"page"},{"location":"literate/metropolis/","page":"Metropolis","title":"Metropolis","text":"","category":"page"},{"location":"literate/metropolis/","page":"Metropolis","title":"Metropolis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"EditURL = \"wolff.jl\"","category":"page"},{"location":"literate/wolff/#Examples-using-Wolff-cluster-sampling-method","page":"Wolff sampler","title":"Examples using Wolff cluster sampling method","text":"","category":"section"},{"location":"literate/wolff/#Magnetization-as-a-function-of-temperature","page":"Wolff sampler","title":"Magnetization as a function of temperature","text":"","category":"section"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"First load some packages","category":"page"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"import IsingModels as Ising\nusing Statistics, CairoMakie, Random\n\nRandom.seed!(1) # make reproducible\nnothing #hide","category":"page"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"First example.","category":"page"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"βs = 0:0.025:1\nfig = Figure(resolution=(600,400))\nax = Axis(fig[1,1], xlabel=\"β\", ylabel=\"m\")\nlines!(ax, 0:0.01:1, Ising.onsager_magnetization, color=:black, label=\"analytical\")\n\nmavg = zeros(length(βs))\nmstd = zeros(length(βs))\nσ = bitrand(32, 32)\nfor (k,β) in enumerate(βs)\n    σ_t, M, E = Ising.wolff!(σ, β, steps=10^3)\n    m = abs.(M[(length(M) ÷ 2):end]) / length(σ)\n    mavg[k] = mean(m)\n    mstd[k] = std(m)\nend\nscatter!(ax, βs, mavg, color=:blue, markersize=5, label=\"MC, L=30\")\nerrorbars!(ax, βs, mavg, mstd/2, color=:blue, whiskerwidth=5)\n\nmavg = zeros(length(βs))\nmstd = zeros(length(βs))\nσ = bitrand(64, 64)\nfor (k,β) in enumerate(βs)\n    σ_t, M, E = Ising.wolff!(σ, β, steps=10^3)\n    m = abs.(M[(length(M) ÷ 2):end]) / length(σ)\n    mavg[k] = mean(m)\n    mstd[k] = std(m)\nend\nscatter!(ax, βs, mavg, color=:red, markersize=5, label=\"MC, L=70\")\nerrorbars!(ax, βs, mavg, mstd/2, color=:red, whiskerwidth=5)\n\naxislegend(ax, position=:rb)\nfig","category":"page"},{"location":"literate/wolff/#Typical-Wolff-clusters-at-criticality","page":"Wolff sampler","title":"Typical Wolff clusters at criticality","text":"","category":"section"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"import IsingModels as Ising\nusing Random, Colors, ColorSchemes, CairoMakie\nRandom.seed!(56) # reproducibility\nβ = Ising.βc\nσ = bitrand(512, 512)\nIsing.metropolis!(σ, β; steps=10^7)\nIsing.wolff!(σ, β, steps=500)\ncluster = Ising.wolff_cluster(σ, CartesianIndex(256, 256), Ising.wolff_padd(β))\n\nfig = Figure(resolution=(700, 350))\nax = Axis(fig[1,1], title=\"spins\")\nhmap = heatmap!(ax, σ, colormap=cgrad([:purple, :orange], [0.5]; categorical=true))\nhidedecorations!(ax)\nax = Axis(fig[1,2], title=\"cluster\")\nhmap = heatmap!(ax, cluster, colormap=cgrad([:white, :black], [0.5]; categorical=true))\nhidedecorations!(ax)\nfig","category":"page"},{"location":"literate/wolff/#Average-size-of-Wolff's-clusters-as-a-function-of-temperature","page":"Wolff sampler","title":"Average size of Wolff's clusters as a function of temperature","text":"","category":"section"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"import IsingModels as Ising\nusing Random, Statistics, Colors, ColorSchemes, CairoMakie\n\nRandom.seed!(1) # make reproducible\n\nTs = 0:0.2:5\nβs = inv.(Ts)\nfig = Figure(resolution=(600,400))\nax = Axis(fig[1,1], xlabel=L\"temperature $T$\", ylabel=L\"average Wolff's cluster size / $N$\")\n\nclavg = zeros(length(βs))\nclstd = zeros(length(βs))\nσ = bitrand(32, 32)\nfor (k,β) in enumerate(βs)\n    σ_t, M, E = Ising.wolff!(σ, β, steps=10^3)\n    cluster_size = abs.(M[2:end] - M[1:(end - 1)]) .÷ 2\n    clavg[k] = mean(cluster_size / length(σ))\n    clstd[k] = std(cluster_size / length(σ))\nend\nscatter!(ax, Ts, clavg, color=:blue, markersize=5, label=\"L=30\")\nlines!(ax, Ts, clavg, color=:blue)\nerrorbars!(ax, Ts, clavg, clstd/2, color=:blue, whiskerwidth=5)\n\nclavg = zeros(length(βs))\nclstd = zeros(length(βs))\nσ = bitrand(64, 64)\nfor (k,β) in enumerate(βs)\n    σ_t, M, E = Ising.wolff!(σ, β, steps=10^3)\n    cluster_size = abs.(M[2:end] - M[1:(end - 1)]) .÷ 2\n    clavg[k] = mean(cluster_size / length(σ))\n    clstd[k] = std(cluster_size / length(σ))\nend\nscatter!(ax, Ts, clavg, color=:red, markersize=5, label=\"L=70\")\nlines!(ax, Ts, clavg, color=:red)\nerrorbars!(ax, Ts, clavg, clstd/2, color=:red, whiskerwidth=5)\nvlines!(ax, [1 / Ising.βc], label=L\"Onsager's $T_c$\", color=:black, linestyle=:dash)\n\naxislegend(ax, position=:rt)\nfig","category":"page"},{"location":"literate/wolff/#Wolff-explores-configurations-efficiently-at-the-critical-temperature","page":"Wolff sampler","title":"Wolff explores configurations efficiently at the critical temperature","text":"","category":"section"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"The following example shows how at the critical temperature, the Metropolis sampler gets stuck in particular cluster structures. In contrast the Wolff algorihm explores diverse states.","category":"page"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"using Statistics, CairoMakie, Random\nimport IsingModels as Ising\n\nRandom.seed!(3) # reproducibility\n\nL = 128\nN = L^2\nσ_t_metro, M_metro, E_metro = Ising.metropolis!(falses(L, L), Ising.βc; steps=10^6, save_interval=2*10^5)\nσ_t_wolff, M_wolff, E_wolff = Ising.wolff!(falses(L, L), Ising.βc, steps=10^4, save_interval=2*10^3)\n\nfig = Figure(resolution=(1000, 800))\nfor t in 1:size(σ_t_metro, 3)\n    ax = Axis(fig[1,1][1,t], title=\"t=$t, metropolis\")\n    heatmap!(ax, σ_t_metro[:,:,t], colorrange=(0,1), colormap=cgrad([:purple, :orange], [0.5]; categorical=true))\n    hidedecorations!(ax)\nend\nfor t in 1:size(σ_t_wolff, 3)\n    ax = Axis(fig[1,1][2,t], title=\"t=$t, wolff\")\n    heatmap!(ax, σ_t_wolff[:,:,t], colorrange=(0,1), colormap=cgrad([:purple, :orange], [0.5]; categorical=true))\n    hidedecorations!(ax)\nend\n\nax = Axis(fig[2,1][1,1], title=\"magnetization\")\nlines!(ax, M_wolff[1:10:end] / N, label=\"wolff\")\nlines!(ax, M_metro[1:1000:end] / N, label=\"metropolis\", linewidth=2, color=:red)\nylims!(ax, (-1,1))\n\nax = Axis(fig[2,1][1,2], title=\"energy\")\nlines!(ax, E_wolff[1:10:end] / N, label=\"wolff\")\nlines!(ax, E_metro[1:1000:end] / N, label=\"metropolis\", linewidth=2, color=:red)\naxislegend(ax, position = :rb)\n\nfig","category":"page"},{"location":"literate/wolff/#Binder's-parameter","page":"Wolff sampler","title":"Binder's parameter","text":"","category":"section"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"As the system size grows, the crossing point of the different curves is the critical temperature.","category":"page"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"using Statistics, CairoMakie, Random\nimport IsingModels as Ising\n\nRandom.seed!(1) # make reproducible\nTs = 2.2:0.01:2.3\nβs = inv.(Ts)\n\nfig = Figure(resolution=(600, 400))\nax = Axis(fig[1,1], xlabel=L\"temperature $T$ ($=1/\\beta$)\", ylabel=\"Binder parameter\")\n@time for (L, color) in zip([4, 8, 16, 32], [:green, :orange, :blue, :red])\n    U = zeros(length(βs))\n    σ = bitrand(L, L)\n    for (k, β) in enumerate(βs)\n        σ_t, M, E = Ising.wolff!(σ, β, steps=10^5)\n        U[k] = (3 - mean(M.^4) / mean(M.^2)^2) / 2\n    end\n    scatter!(ax, Ts, U, color=color, markersize=5, label=L\"L=%$L\")\n    lines!(ax, Ts, U, color=color, markersize=5)\nend\nvlines!(ax, [1 / Ising.βc], label=L\"Onsager's $T_c$\", color=:black, linestyle=:dash)\naxislegend(ax, position=:lb)\n\nfig","category":"page"},{"location":"literate/wolff/#Heat-capacity-vs.-exact-expression","page":"Wolff sampler","title":"Heat capacity vs. exact expression","text":"","category":"section"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"using Statistics, CairoMakie, Random\nimport IsingModels as Ising\n\nRandom.seed!(1) # make reproducible\nTs = 1.8:0.01:3\nβs = inv.(Ts)\n\nfig = Figure(resolution=(800, 400))\nax = Axis(fig[1,1], xlabel=L\"temperature $T$ ($=1/\\beta$)\", ylabel=\"heat capacity\", limits=(extrema(Ts)..., 0,2))\n\n@time for (L, color) in zip([4, 8, 16, 32], [:green, :orange, :blue, :red])\n    C = zeros(length(βs))\n    for (k, β) in enumerate(βs)\n        σ = bitrand(L, L)\n        σ_t, M, E = Ising.wolff!(σ, β, steps=10^5)\n        C[k] = β^2/length(σ) * var(E)\n    end\n    scatter!(ax, Ts, C, color=color, markersize=5, label=L\"L=%$L\")\nend\nlines!(ax, Ts, Ising.onsager_heat_capacity.(βs), color=:black, label=\"exact\")\nvlines!(ax, [1 / Ising.βc], label=L\"Onsager's $T_c$\", color=:black, linestyle=:dash)\nLegend(fig[1,2], ax)\n\nfig","category":"page"},{"location":"literate/wolff/#Internal-energy-vs.-exact-expression","page":"Wolff sampler","title":"Internal energy vs. exact expression","text":"","category":"section"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"using Statistics, CairoMakie, Random\nimport IsingModels as Ising\n\nRandom.seed!(1) # make reproducible\nTs = 1.8:0.05:3\nβs = inv.(Ts)\n\nfig = Figure(resolution=(800, 400))\nax = Axis(fig[1,1], xlabel=L\"temperature $T$ ($=1/\\beta$)\", ylabel=\"internal energy\")\n\n@time for (L, color) in zip([4, 8, 16, 32], [:green, :orange, :blue, :red])\n    Eavg = zeros(length(βs))\n    Estd = zeros(length(βs))\n    for (k, β) in enumerate(βs)\n        σ = bitrand(L, L)\n        σ_t, M, E = Ising.wolff!(σ, β, steps=10^5)\n        Eavg[k] = mean(E / length(σ))\n        Estd[k] = std(E / length(σ))\n    end\n    scatter!(ax, Ts, Eavg, color=color, markersize=5, label=L\"L=%$L\")\n    errorbars!(ax, Ts, Eavg, Estd/2, color=color, whiskerwidth=5)\nend\nlines!(ax, Ts, Ising.onsager_internal_energy.(βs), color=:black, label=\"exact\")\nvlines!(ax, [1 / Ising.βc], label=L\"Onsager's $T_c$\", color=:black, linestyle=:dash)\nLegend(fig[1,2], ax)\n\nfig","category":"page"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"","category":"page"},{"location":"literate/wolff/","page":"Wolff sampler","title":"Wolff sampler","text":"This page was generated using Literate.jl.","category":"page"},{"location":"ising/#The-2-dimensional-Ising-model","page":"The Ising Model","title":"The 2-dimensional Ising model","text":"","category":"section"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"The 2-dimensional Ising model is defined by the energy function:","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"E(mathbfsigma) = - sum_langle i j rangle sigma_i sigma_j","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"where langle i j rangle refers to connected pairs of sites in the square grid lattice, and sigma_i = pm 1 are spins. At inverse temperature beta, this defines a Boltzmann probability distribution:","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"P(mathbfsigma) = frac1Z mathrme^-beta E (mathbfsigma)","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"where","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"Z = sum_mathbfsigma mathrme^-beta E(mathbfsigma)","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"is the partition function.","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"In the two-dimensional grid lattice, we assume we have a Ltimes K plane grid, where each spin is connected to its four neighbors. We assume periodic boundary conditions, so spin (1,1) is connected to spin (L,K).","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"In the thermodynamic limit (large L with K = L), this model suffers a phase transition at the critical inverse temperature beta approx 044 (called βc in the package).","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"In this package, the system is simulated using the Metropolis algorithm or the Wolff cluster algorithm, both explained here:","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"Newman, Mark EJ, and G. T. Barkema. \"Monte Carlo Methods in Statistical Physics (1999).\" New York: Oxford 475 (1999).","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"Onsager derived exact expressions for the free energy, the heat capacity, and the internal energy in the thermodynamic limit.","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"Onsager, Lars. \"Crystal statistics. I. A two-dimensional model with an order-disorder transition.\" Physical Review 65.3-4 (1944): 117.","category":"page"},{"location":"ising/","page":"The Ising Model","title":"The Ising Model","text":"See onsager_internal_energy and onsager_heat_capacity, implemented in this package.","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"EditURL = \"metropolis_f.jl\"","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"Examples using the Metropolis+F(M) sampling method","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"The metropolis!(...; f = f) method samples an energy of the form:","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"E = -sum_langle ijrangle s_i s_j + f(M)","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"where f(M) is a function of the total magnetization,","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"M = sum_i s_i","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"Note that M is not normalized by the number of spins. Also note that the temperature multiplies both the original Ising energy, and f(M):","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"- beta E = betasum_langle ijrangle s_i s_j - beta f(M)","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"Therefore the system prefers configurations with lower values of f(M).","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"We will consider the above energy with the modified term f(M) = wMbeta. Here M is the absolute value of the magnetization. w is a factor that weights this term in the energy, and we divide by beta, so that the overall system looks like this:","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"- beta E = betasum_langle ijrangle s_i s_j - wM","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"First load required packages.","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"import IsingModels as Ising\nusing Statistics, Random\nusing LogExpFunctions, CairoMakie, IrrationalConstants\nnothing #hide","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"Try to make output reproducible","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"Random.seed!(1)\nnothing #hide","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"Define the parameter ranges we will consider.","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"ws = 0:0.001:0.050 # weight of extra term\nLs = [32, 64]\nβs = [0.4, 0.5, 0.6] # inverse temperatures\ncs = [:red, :purple, :blue] # colors\nnothing #hide","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"Simulate and collect data.","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"magnetization_avg = Dict{typeof((β=first(βs), w=first(ws), L=first(Ls))), Float64}()\nmagnetization_std = Dict{typeof((β=first(βs), w=first(ws), L=first(Ls))), Float64}()\n\nfor β in βs, w in ws, L in Ls\n    f(M::Real) = w * abs(M) / β\n    σ = trues(L, L)\n    σ_t, M, E = Ising.metropolis!(σ, β; steps=10^7, f=f)\n    magnetization_avg[(β=β, w=w, L=L)] = mean(M)\n    magnetization_std[(β=β, w=w, L=L)] = std(M)\nend\n\nnothing #hide","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"Now let's plot the results.","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"fig = Figure(resolution=(1000, 400))\nfor (iL, L) in enumerate(Ls)\n    ax = Axis(fig[1,iL], xlabel=\"w\", ylabel=\"m\", title=\"L=$L\")\n    for (iβ, (β, color)) in enumerate(zip(βs, cs))\n        mavg = [magnetization_avg[(β=β, w=w, L=L)] / L^2 for w in ws]\n        mstd = [magnetization_std[(β=β, w=w, L=L)] / L^2 for w in ws]\n        lines!(ax, ws, mavg, label=\"β=$β\", color=color)\n        errorbars!(ax, ws, mavg, mstd/2, whiskerwidth=5, color=color)\n    end\n    axislegend(ax, position=:rt)\nend\nfig","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"We now try the function f(M) = logcosh(wM)  beta, so that:","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"- beta E = betasum_langle ijrangle s_i s_j - logcosh(w M)","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"First collect some data.","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"magnetization_avg = Dict{typeof((β=first(βs), w=first(ws), L=first(Ls))), Float64}()\nmagnetization_std = Dict{typeof((β=first(βs), w=first(ws), L=first(Ls))), Float64}()\n\nfor β in βs, w in ws, L in Ls\n    f(M) = logcosh(w * M) / β\n    σ = trues(L, L)\n    σ_t, M, E = Ising.metropolis!(σ, β; steps=10^7, f=f)\n    magnetization_avg[(β=β, w=w, L=L)] = mean(M)\n    magnetization_std[(β=β, w=w, L=L)] = std(M)\nend\n\nnothing #hide","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"Now plot the result.","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"fig = Figure(resolution=(1000, 400))\nfor (iL, L) in enumerate(Ls)\n    ax = Axis(fig[1,iL], xlabel=\"w\", ylabel=\"m\", title=\"L=$L\")\n    for (iβ, (β, color)) in enumerate(zip(βs, cs))\n        mavg = [magnetization_avg[(β=β, w=w, L=L)] / L^2 for w in ws]\n        mstd = [magnetization_std[(β=β, w=w, L=L)] / L^2 for w in ws]\n        lines!(ax, ws, mavg, label=\"β=$β\", color=color)\n        errorbars!(ax, ws, mavg, mstd/2, whiskerwidth=5, color=color)\n    end\n    axislegend(ax, position=:rt)\nend\nfig","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"","category":"page"},{"location":"literate/metropolis_f/","page":"Metropolis+f(M)","title":"Metropolis+f(M)","text":"This page was generated using Literate.jl.","category":"page"},{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"This package doesn't export any symbols. It is recommended to import as:","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"import IsingModels as Ising","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [Ising]","category":"page"},{"location":"reference/#IsingModels.βc","page":"Reference","title":"IsingModels.βc","text":"βc\n\nCritical temperature of the 2-dimensional infinite lattice Ising model determined by Onsager.\n\n\n\n\n\n","category":"constant"},{"location":"reference/#IsingModels.binary-Tuple{Signed}","page":"Reference","title":"IsingModels.binary","text":"binary(s)\n\nConverts to Boolean representation.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.dynamic_hybrid!-Tuple{AbstractArray{Bool}, Real}","page":"Reference","title":"IsingModels.dynamic_hybrid!","text":"dynamic_hybrid!(σ, β; steps, save_interval)\n\nSame as hybrid!, but adjusts numbers of Metropolis and Wolff steps dynamically.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.energy","page":"Reference","title":"IsingModels.energy","text":"energy(σ, h = 0; f)\n\nComputes the energy of σ in the Ising model.\n\n\n\n\n\n","category":"function"},{"location":"reference/#IsingModels.flip-Tuple{Bool}","page":"Reference","title":"IsingModels.flip","text":"flip(σ)\n\nFlips a spin.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.hybrid!-Tuple{AbstractArray{Bool}, Real}","page":"Reference","title":"IsingModels.hybrid!","text":"hybrid!(σ, β; steps = 1, save_interval = length(σ), local_steps = length(σ))\n\nHybrid sampler, performing local_steps of Metropolis sampling, then one Wolff cluster move, then another local_steps of Metropolis sampling, one more Wolff cluster move, and so on.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.kramers_wannier-Tuple{Real}","page":"Reference","title":"IsingModels.kramers_wannier","text":"kramers_wannier(β)\n\nReturns the Kramers-Wannier dual inverse-temperature of β.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.magnetization-Tuple{AbstractArray{Bool}}","page":"Reference","title":"IsingModels.magnetization","text":"magnetization(σ)\n\nComputes the magnetization of a set of spins.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.metropolis!","page":"Reference","title":"IsingModels.metropolis!","text":"metropolis!(σ, β, h = 0; steps = 1, save_interval = length(σ))\n\nPerforms one or more Metropolis MC steps from the configuration σ, at inverse temperature β. Returns three lists: σ_t, M, E, where σ_t contains configurations sampled at intervals save_interval (by default equals the number of sites), M is the record of magnetizations, and E the record of energies.\n\n\n\n\n\n","category":"function"},{"location":"reference/#IsingModels.mf_energy","page":"Reference","title":"IsingModels.mf_energy","text":"mf_energy(σ, h = 0; f = nothing)\n\n\n\n\n\n","category":"function"},{"location":"reference/#IsingModels.mf_random_configurations","page":"Reference","title":"IsingModels.mf_random_configurations","text":"mf_random_configurations(N, β, h = 0; f, B = 1)\n\nGenerates B random configurations of the Curie-Weiss model.\n\n\n\n\n\n","category":"function"},{"location":"reference/#IsingModels.mf_random_magnetizations","page":"Reference","title":"IsingModels.mf_random_magnetizations","text":"mf_random_magnetizations(N, β, h = 0; f = nothing, B = 1)\n\nGenerates a random magnetization of the Curie-Weiss model, that is, a value of\n\nM = sum_i=1^N s_i\n\nthat follows the statistics of the mean-field (MF) Curie-Weiss model, with energy function:\n\nE = -sum_i  j s_i s_j - h * sum_i s_i + f(M)\n\nBy default f(M) = 0.\n\nB controls the number of samples generated.\n\n\n\n\n\n","category":"function"},{"location":"reference/#IsingModels.mf_random_magnetized_configuration!-Tuple{AbstractVector{Bool}, Int64}","page":"Reference","title":"IsingModels.mf_random_magnetized_configuration!","text":"mf_random_magnetized_configuration!(σ, M)\n\nRandom configuration with magnetization equal to M.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.mf_random_magnetized_configuration-Tuple{Int64, Int64}","page":"Reference","title":"IsingModels.mf_random_magnetized_configuration","text":"mf_random_magnetized_configuration(N, M)\n\nRandom Curie-Weiss configuration with N spind, with magnetization equal to M.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.onsager_heat_capacity-Tuple{Real}","page":"Reference","title":"IsingModels.onsager_heat_capacity","text":"onsager_heat_capacity(β)\n\nSpecific heat capacity of the two-dimensional Ising model, derived by Onsager in the thermodynamic limit.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.onsager_internal_energy-Tuple{Real}","page":"Reference","title":"IsingModels.onsager_internal_energy","text":"onsager_internal_energy(β)\n\nInternal energy per site of the two-dimensional Ising model, derived by Onsager in the thermodynamic limit.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.onsager_magnetization-Tuple{Real}","page":"Reference","title":"IsingModels.onsager_magnetization","text":"onsager_magnetization(β)\n\nAnalytical magnetization of the two-dimensional Ising model found by Onsager in the thermodynamic limit.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.random_magnetized_configuration!-Tuple{AbstractArray{Bool}, Int64}","page":"Reference","title":"IsingModels.random_magnetized_configuration!","text":"random_magnetized_configuration!(σ, M)\n\nGenerate a random spin configuration with magnetization equal to M. You must make sure that the given value M is feasible.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.spin-Tuple{Bool}","page":"Reference","title":"IsingModels.spin","text":"spin(σ)\n\nReturns +1 or -1 spin value, from a boolean σ representation.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.sum_neighbors-Union{Tuple{D}, Tuple{AbstractArray{Bool, D}, CartesianIndex{D}}} where D","page":"Reference","title":"IsingModels.sum_neighbors","text":"sum_neighbors(σ, i)\n\nSum of spins in neighbor sites of i.\n\n\n\n\n\n","category":"method"},{"location":"reference/#IsingModels.wolff!-Tuple{AbstractArray{Bool}, Real}","page":"Reference","title":"IsingModels.wolff!","text":"wolff!(σ, β; steps = 1, save_interval = 1)\n\nPerfoms one or more Wolff MC steps from the configuration σ, at inverse temperature β.\n\n\n\n\n\n","category":"method"},{"location":"#IsingModels.jl-Documentation","page":"Home","title":"IsingModels.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A simple Julia package to simulate the Ising model in a two-dimensional rectangular grid.","category":"page"},{"location":"#Package-Features","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Monte Carlo samplers for the 2D Ising model: Metropolis and Wolff.\nCompute and track energy, magnetization, and configurations during a simulation.\nAnalytical magnetization and critical temperature found by Onsager, as well as other analytical quantities.\nA Metropolis+F(M) sampler, where we can add an arbitrary function of the magnetization to the energy.","category":"page"},{"location":"#Outline","page":"Home","title":"Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#main-index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"lib/public.md\"]","category":"page"}]
}
